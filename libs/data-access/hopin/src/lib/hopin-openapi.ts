/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


/** Type helpers */
type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };
type XOR<T, U> = (T | U) extends object ? (Without<T, U> & U) | (Without<U, T> & T) : T | U;
type OneOf<T extends any[]> = T extends [infer Only] ? Only : T extends [infer A, infer B, ...infer Rest] ? OneOf<[XOR<A, B>, ...Rest]> : never;

export interface paths {
  "/v1/health": {
    /** Checks if all systems are operational */
    get: {
      /** Checks if all systems are operational */
      responses: {
        /** @description All systems are up */
        200: {
          content: {
            "application/json": {
              status?: string;
            };
          };
        };
        /** @description authentication failed */
        401: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
      };
    };
  };
  "/v1/booths/:boothId/tags": {
    /** Returns the list of tags for a Booth */
    get: {
      /** Returns the list of tags for a Booth */
      parameters: {
        path: {
          boothId: string;
        };
      };
      responses: {
        /** @description Returns the list of tags for a booth */
        200: {
          content: {
            "application/json": {
              data: (components["schemas"]["tag"])[];
              meta: components["schemas"]["listMeta"];
              links: components["schemas"]["listLinks"];
            };
          };
        };
        /** @description authentication failed */
        401: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description not found */
        404: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
      };
    };
  };
  "/v1/events/{eventId}/booths": {
    /** Returns the list of booths for user's organization's event */
    get: {
      /** Returns the list of booths for user's organization's event */
      parameters: {
        path: {
          eventId: string;
        };
      };
      responses: {
        /** @description Returns the list of booths for user's organization's event */
        200: {
          content: {
            "application/json": {
              data: (components["schemas"]["booth"])[];
              meta: components["schemas"]["listMeta"];
              links: components["schemas"]["listLinks"];
            };
          };
        };
        /** @description authentication failed */
        401: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description not found */
        404: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
      };
    };
  };
  "/v1/events/{eventId}/dataSubscriptions": {
    /** Create a new data subscription */
    post: {
      /** Create a new data subscription */
      parameters: {
        path: {
          eventId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": {
            data: {
              /**
               * @description Resource type 
               * @enum {string}
               */
              type: "dataSubscription";
              attributes: {
                configuration?: {
                  url?: string;
                  type?: string;
                  /** Format: date-time */
                  expiresAt?: string;
                };
                signals?: ("attendance" | "attendeeCheckedInToEvent" | "attendeeCheckedInToScheduleItem" | "attendeeCheckedOutFromEvent" | "attendeeCheckedOutFromScheduleItem" | "attendeeClickedUrl" | "attendeeEnteredEventArea" | "attendeeFilledMidEventSurvey" | "attendeeFilledPostEventSurvey" | "attendeeLeftEventArea" | "attendeeRegisteredVendorInterest" | "onsiteSegmentRegistrationCreated" | "registrationQrCreated" | "registrationQrUpdated")[];
              };
            };
          };
        };
      };
      responses: {
        /** @description Create a new data subscription */
        201: {
          content: {
            "application/json": {
              data: components["schemas"]["dataSubscription"];
            };
          };
        };
        /** @description authentication failed */
        401: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description not found */
        404: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
      };
    };
  };
  "/v1/events/{eventId}/duplications": {
    /** Duplicates an existing event */
    post: {
      /** Duplicates an existing event */
      parameters: {
        path: {
          eventId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": {
            data: {
              /**
               * @description Resource type 
               * @enum {string}
               */
              type: "event";
              attributes: {
                auto_publish?: boolean;
                metadata?: Record<string, never>;
                name?: string;
                organizationId?: string;
                password?: string;
                /** Format: date-time */
                timeEnd?: string;
                /** Format: date-time */
                timeStart?: string;
                /** @enum {string} */
                timezone?: "Abu Dhabi" | "Adelaide" | "Africa/Abidjan" | "Africa/Accra" | "Africa/Addis_Ababa" | "Africa/Algiers" | "Africa/Asmara" | "Africa/Asmera" | "Africa/Bamako" | "Africa/Bangui" | "Africa/Banjul" | "Africa/Bissau" | "Africa/Blantyre" | "Africa/Brazzaville" | "Africa/Bujumbura" | "Africa/Cairo" | "Africa/Casablanca" | "Africa/Ceuta" | "Africa/Conakry" | "Africa/Dakar" | "Africa/Dar_es_Salaam" | "Africa/Djibouti" | "Africa/Douala" | "Africa/El_Aaiun" | "Africa/Freetown" | "Africa/Gaborone" | "Africa/Harare" | "Africa/Johannesburg" | "Africa/Juba" | "Africa/Kampala" | "Africa/Khartoum" | "Africa/Kigali" | "Africa/Kinshasa" | "Africa/Lagos" | "Africa/Libreville" | "Africa/Lome" | "Africa/Luanda" | "Africa/Lubumbashi" | "Africa/Lusaka" | "Africa/Malabo" | "Africa/Maputo" | "Africa/Maseru" | "Africa/Mbabane" | "Africa/Mogadishu" | "Africa/Monrovia" | "Africa/Nairobi" | "Africa/Ndjamena" | "Africa/Niamey" | "Africa/Nouakchott" | "Africa/Ouagadougou" | "Africa/Porto-Novo" | "Africa/Sao_Tome" | "Africa/Timbuktu" | "Africa/Tripoli" | "Africa/Tunis" | "Africa/Windhoek" | "Alaska" | "Almaty" | "America/Adak" | "America/Anchorage" | "America/Anguilla" | "America/Antigua" | "America/Araguaina" | "America/Argentina/Buenos_Aires" | "America/Argentina/Catamarca" | "America/Argentina/ComodRivadavia" | "America/Argentina/Cordoba" | "America/Argentina/Jujuy" | "America/Argentina/La_Rioja" | "America/Argentina/Mendoza" | "America/Argentina/Rio_Gallegos" | "America/Argentina/Salta" | "America/Argentina/San_Juan" | "America/Argentina/San_Luis" | "America/Argentina/Tucuman" | "America/Argentina/Ushuaia" | "America/Aruba" | "America/Asuncion" | "America/Atikokan" | "America/Atka" | "America/Bahia" | "America/Bahia_Banderas" | "America/Barbados" | "America/Belem" | "America/Belize" | "America/Blanc-Sablon" | "America/Boa_Vista" | "America/Bogota" | "America/Boise" | "America/Buenos_Aires" | "America/Cambridge_Bay" | "America/Campo_Grande" | "America/Cancun" | "America/Caracas" | "America/Catamarca" | "America/Cayenne" | "America/Cayman" | "America/Chicago" | "America/Chihuahua" | "America/Coral_Harbour" | "America/Cordoba" | "America/Costa_Rica" | "America/Creston" | "America/Cuiaba" | "America/Curacao" | "America/Danmarkshavn" | "America/Dawson" | "America/Dawson_Creek" | "America/Denver" | "America/Detroit" | "America/Dominica" | "America/Edmonton" | "America/Eirunepe" | "America/El_Salvador" | "America/Ensenada" | "America/Fort_Nelson" | "America/Fort_Wayne" | "America/Fortaleza" | "America/Glace_Bay" | "America/Godthab" | "America/Goose_Bay" | "America/Grand_Turk" | "America/Grenada" | "America/Guadeloupe" | "America/Guatemala" | "America/Guayaquil" | "America/Guyana" | "America/Halifax" | "America/Havana" | "America/Hermosillo" | "America/Indiana/Indianapolis" | "America/Indiana/Knox" | "America/Indiana/Marengo" | "America/Indiana/Petersburg" | "America/Indiana/Tell_City" | "America/Indiana/Vevay" | "America/Indiana/Vincennes" | "America/Indiana/Winamac" | "America/Indianapolis" | "America/Inuvik" | "America/Iqaluit" | "America/Jamaica" | "America/Jujuy" | "America/Juneau" | "America/Kentucky/Louisville" | "America/Kentucky/Monticello" | "America/Knox_IN" | "America/Kralendijk" | "America/La_Paz" | "America/Lima" | "America/Los_Angeles" | "America/Louisville" | "America/Lower_Princes" | "America/Maceio" | "America/Managua" | "America/Manaus" | "America/Marigot" | "America/Martinique" | "America/Matamoros" | "America/Mazatlan" | "America/Mendoza" | "America/Menominee" | "America/Merida" | "America/Metlakatla" | "America/Mexico_City" | "America/Miquelon" | "America/Moncton" | "America/Monterrey" | "America/Montevideo" | "America/Montreal" | "America/Montserrat" | "America/Nassau" | "America/New_York" | "America/Nipigon" | "America/Nome" | "America/Noronha" | "America/North_Dakota/Beulah" | "America/North_Dakota/Center" | "America/North_Dakota/New_Salem" | "America/Nuuk" | "America/Ojinaga" | "America/Panama" | "America/Pangnirtung" | "America/Paramaribo" | "America/Phoenix" | "America/Port-au-Prince" | "America/Port_of_Spain" | "America/Porto_Acre" | "America/Porto_Velho" | "America/Puerto_Rico" | "America/Punta_Arenas" | "America/Rainy_River" | "America/Rankin_Inlet" | "America/Recife" | "America/Regina" | "America/Resolute" | "America/Rio_Branco" | "America/Rosario" | "America/Santa_Isabel" | "America/Santarem" | "America/Santiago" | "America/Santo_Domingo" | "America/Sao_Paulo" | "America/Scoresbysund" | "America/Shiprock" | "America/Sitka" | "America/St_Barthelemy" | "America/St_Johns" | "America/St_Kitts" | "America/St_Lucia" | "America/St_Thomas" | "America/St_Vincent" | "America/Swift_Current" | "America/Tegucigalpa" | "America/Thule" | "America/Thunder_Bay" | "America/Tijuana" | "America/Toronto" | "America/Tortola" | "America/Vancouver" | "America/Virgin" | "America/Whitehorse" | "America/Winnipeg" | "America/Yakutat" | "America/Yellowknife" | "American Samoa" | "Amsterdam" | "Antarctica/Casey" | "Antarctica/Davis" | "Antarctica/DumontDUrville" | "Antarctica/Macquarie" | "Antarctica/Mawson" | "Antarctica/McMurdo" | "Antarctica/Palmer" | "Antarctica/Rothera" | "Antarctica/South_Pole" | "Antarctica/Syowa" | "Antarctica/Troll" | "Antarctica/Vostok" | "Arctic/Longyearbyen" | "Arizona" | "Asia/Aden" | "Asia/Almaty" | "Asia/Amman" | "Asia/Anadyr" | "Asia/Aqtau" | "Asia/Aqtobe" | "Asia/Ashgabat" | "Asia/Ashkhabad" | "Asia/Atyrau" | "Asia/Baghdad" | "Asia/Bahrain" | "Asia/Baku" | "Asia/Bangkok" | "Asia/Barnaul" | "Asia/Beirut" | "Asia/Bishkek" | "Asia/Brunei" | "Asia/Calcutta" | "Asia/Chita" | "Asia/Choibalsan" | "Asia/Chongqing" | "Asia/Chungking" | "Asia/Colombo" | "Asia/Dacca" | "Asia/Damascus" | "Asia/Dhaka" | "Asia/Dili" | "Asia/Dubai" | "Asia/Dushanbe" | "Asia/Famagusta" | "Asia/Gaza" | "Asia/Harbin" | "Asia/Hebron" | "Asia/Ho_Chi_Minh" | "Asia/Hong_Kong" | "Asia/Hovd" | "Asia/Irkutsk" | "Asia/Istanbul" | "Asia/Jakarta" | "Asia/Jayapura" | "Asia/Jerusalem" | "Asia/Kabul" | "Asia/Kamchatka" | "Asia/Karachi" | "Asia/Kashgar" | "Asia/Kathmandu" | "Asia/Katmandu" | "Asia/Khandyga" | "Asia/Kolkata" | "Asia/Krasnoyarsk" | "Asia/Kuala_Lumpur" | "Asia/Kuching" | "Asia/Kuwait" | "Asia/Macao" | "Asia/Macau" | "Asia/Magadan" | "Asia/Makassar" | "Asia/Manila" | "Asia/Muscat" | "Asia/Nicosia" | "Asia/Novokuznetsk" | "Asia/Novosibirsk" | "Asia/Omsk" | "Asia/Oral" | "Asia/Phnom_Penh" | "Asia/Pontianak" | "Asia/Pyongyang" | "Asia/Qatar" | "Asia/Qostanay" | "Asia/Qyzylorda" | "Asia/Rangoon" | "Asia/Riyadh" | "Asia/Saigon" | "Asia/Sakhalin" | "Asia/Samarkand" | "Asia/Seoul" | "Asia/Shanghai" | "Asia/Singapore" | "Asia/Srednekolymsk" | "Asia/Taipei" | "Asia/Tashkent" | "Asia/Tbilisi" | "Asia/Tehran" | "Asia/Tel_Aviv" | "Asia/Thimbu" | "Asia/Thimphu" | "Asia/Tokyo" | "Asia/Tomsk" | "Asia/Ujung_Pandang" | "Asia/Ulaanbaatar" | "Asia/Ulan_Bator" | "Asia/Urumqi" | "Asia/Ust-Nera" | "Asia/Vientiane" | "Asia/Vladivostok" | "Asia/Yakutsk" | "Asia/Yangon" | "Asia/Yekaterinburg" | "Asia/Yerevan" | "Astana" | "Athens" | "Atlantic Time (Canada)" | "Atlantic/Azores" | "Atlantic/Bermuda" | "Atlantic/Canary" | "Atlantic/Cape_Verde" | "Atlantic/Faeroe" | "Atlantic/Faroe" | "Atlantic/Jan_Mayen" | "Atlantic/Madeira" | "Atlantic/Reykjavik" | "Atlantic/South_Georgia" | "Atlantic/St_Helena" | "Atlantic/Stanley" | "Auckland" | "Australia/ACT" | "Australia/Adelaide" | "Australia/Brisbane" | "Australia/Broken_Hill" | "Australia/Canberra" | "Australia/Currie" | "Australia/Darwin" | "Australia/Eucla" | "Australia/Hobart" | "Australia/LHI" | "Australia/Lindeman" | "Australia/Lord_Howe" | "Australia/Melbourne" | "Australia/NSW" | "Australia/North" | "Australia/Perth" | "Australia/Queensland" | "Australia/South" | "Australia/Sydney" | "Australia/Tasmania" | "Australia/Victoria" | "Australia/West" | "Australia/Yancowinna" | "Azores" | "Baghdad" | "Baku" | "Bangkok" | "Beijing" | "Belgrade" | "Berlin" | "Bern" | "Bogota" | "Brasilia" | "Bratislava" | "Brazil/Acre" | "Brazil/DeNoronha" | "Brazil/East" | "Brazil/West" | "Brisbane" | "Brussels" | "Bucharest" | "Budapest" | "Buenos Aires" | "CET" | "CST6CDT" | "Cairo" | "Canada/Atlantic" | "Canada/Central" | "Canada/Eastern" | "Canada/Mountain" | "Canada/Newfoundland" | "Canada/Pacific" | "Canada/Saskatchewan" | "Canada/Yukon" | "Canberra" | "Cape Verde Is." | "Caracas" | "Casablanca" | "Central America" | ("Central Time (US & Canada)") | "Chatham Is." | "Chennai" | "Chihuahua" | "Chile/Continental" | "Chile/EasterIsland" | "Chongqing" | "Copenhagen" | "Cuba" | "Darwin" | "Dhaka" | "Dublin" | "EET" | "EST" | "EST5EDT" | ("Eastern Time (US & Canada)") | "Edinburgh" | "Egypt" | "Eire" | "Ekaterinburg" | "Etc/GMT" | "Etc/GMT+0" | "Etc/GMT+1" | "Etc/GMT+10" | "Etc/GMT+11" | "Etc/GMT+12" | "Etc/GMT+2" | "Etc/GMT+3" | "Etc/GMT+4" | "Etc/GMT+5" | "Etc/GMT+6" | "Etc/GMT+7" | "Etc/GMT+8" | "Etc/GMT+9" | "Etc/GMT-0" | "Etc/GMT-1" | "Etc/GMT-10" | "Etc/GMT-11" | "Etc/GMT-12" | "Etc/GMT-13" | "Etc/GMT-14" | "Etc/GMT-2" | "Etc/GMT-3" | "Etc/GMT-4" | "Etc/GMT-5" | "Etc/GMT-6" | "Etc/GMT-7" | "Etc/GMT-8" | "Etc/GMT-9" | "Etc/GMT0" | "Etc/Greenwich" | "Etc/UCT" | "Etc/UTC" | "Etc/Universal" | "Etc/Zulu" | "Europe/Amsterdam" | "Europe/Andorra" | "Europe/Astrakhan" | "Europe/Athens" | "Europe/Belfast" | "Europe/Belgrade" | "Europe/Berlin" | "Europe/Bratislava" | "Europe/Brussels" | "Europe/Bucharest" | "Europe/Budapest" | "Europe/Busingen" | "Europe/Chisinau" | "Europe/Copenhagen" | "Europe/Dublin" | "Europe/Gibraltar" | "Europe/Guernsey" | "Europe/Helsinki" | "Europe/Isle_of_Man" | "Europe/Istanbul" | "Europe/Jersey" | "Europe/Kaliningrad" | "Europe/Kiev" | "Europe/Kirov" | "Europe/Lisbon" | "Europe/Ljubljana" | "Europe/London" | "Europe/Luxembourg" | "Europe/Madrid" | "Europe/Malta" | "Europe/Mariehamn" | "Europe/Minsk" | "Europe/Monaco" | "Europe/Moscow" | "Europe/Nicosia" | "Europe/Oslo" | "Europe/Paris" | "Europe/Podgorica" | "Europe/Prague" | "Europe/Riga" | "Europe/Rome" | "Europe/Samara" | "Europe/San_Marino" | "Europe/Sarajevo" | "Europe/Saratov" | "Europe/Simferopol" | "Europe/Skopje" | "Europe/Sofia" | "Europe/Stockholm" | "Europe/Tallinn" | "Europe/Tirane" | "Europe/Tiraspol" | "Europe/Ulyanovsk" | "Europe/Uzhgorod" | "Europe/Vaduz" | "Europe/Vatican" | "Europe/Vienna" | "Europe/Vilnius" | "Europe/Volgograd" | "Europe/Warsaw" | "Europe/Zagreb" | "Europe/Zaporozhye" | "Europe/Zurich" | "Factory" | "Fiji" | "GB" | "GB-Eire" | "GMT" | "GMT+0" | "GMT-0" | "GMT0" | "Georgetown" | "Greenland" | "Greenwich" | "Guadalajara" | "Guam" | "HST" | "Hanoi" | "Harare" | "Hawaii" | "Helsinki" | "Hobart" | "Hong Kong" | "Hongkong" | "Iceland" | "Indian/Antananarivo" | "Indian/Chagos" | "Indian/Christmas" | "Indian/Cocos" | "Indian/Comoro" | "Indian/Kerguelen" | "Indian/Mahe" | "Indian/Maldives" | "Indian/Mauritius" | "Indian/Mayotte" | "Indian/Reunion" | "Indiana (East)" | "International Date Line West" | "Iran" | "Irkutsk" | "Islamabad" | "Israel" | "Istanbul" | "Jakarta" | "Jamaica" | "Japan" | "Jerusalem" | "Kabul" | "Kaliningrad" | "Kamchatka" | "Karachi" | "Kathmandu" | "Kolkata" | "Krasnoyarsk" | "Kuala Lumpur" | "Kuwait" | "Kwajalein" | "Kyiv" | "La Paz" | "Libya" | "Lima" | "Lisbon" | "Ljubljana" | "London" | "MET" | "MST" | "MST7MDT" | "Madrid" | "Magadan" | "Marshall Is." | "Mazatlan" | "Melbourne" | "Mexico City" | "Mexico/BajaNorte" | "Mexico/BajaSur" | "Mexico/General" | "Mid-Atlantic" | "Midway Island" | "Minsk" | "Monrovia" | "Monterrey" | "Montevideo" | "Moscow" | ("Mountain Time (US & Canada)") | "Mumbai" | "Muscat" | "NZ" | "NZ-CHAT" | "Nairobi" | "Navajo" | "New Caledonia" | "New Delhi" | "Newfoundland" | "Novosibirsk" | "Nuku'alofa" | "Osaka" | "PRC" | "PST8PDT" | ("Pacific Time (US & Canada)") | "Pacific/Apia" | "Pacific/Auckland" | "Pacific/Bougainville" | "Pacific/Chatham" | "Pacific/Chuuk" | "Pacific/Easter" | "Pacific/Efate" | "Pacific/Enderbury" | "Pacific/Fakaofo" | "Pacific/Fiji" | "Pacific/Funafuti" | "Pacific/Galapagos" | "Pacific/Gambier" | "Pacific/Guadalcanal" | "Pacific/Guam" | "Pacific/Honolulu" | "Pacific/Johnston" | "Pacific/Kiritimati" | "Pacific/Kosrae" | "Pacific/Kwajalein" | "Pacific/Majuro" | "Pacific/Marquesas" | "Pacific/Midway" | "Pacific/Nauru" | "Pacific/Niue" | "Pacific/Norfolk" | "Pacific/Noumea" | "Pacific/Pago_Pago" | "Pacific/Palau" | "Pacific/Pitcairn" | "Pacific/Pohnpei" | "Pacific/Ponape" | "Pacific/Port_Moresby" | "Pacific/Rarotonga" | "Pacific/Saipan" | "Pacific/Samoa" | "Pacific/Tahiti" | "Pacific/Tarawa" | "Pacific/Tongatapu" | "Pacific/Truk" | "Pacific/Wake" | "Pacific/Wallis" | "Pacific/Yap" | "Paris" | "Perth" | "Poland" | "Port Moresby" | "Portugal" | "Prague" | "Pretoria" | "Puerto Rico" | "Quito" | "ROC" | "ROK" | "Rangoon" | "Riga" | "Riyadh" | "Rome" | "Samara" | "Samoa" | "Santiago" | "Sapporo" | "Sarajevo" | "Saskatchewan" | "Seoul" | "Singapore" | "Skopje" | "Sofia" | "Solomon Is." | "Srednekolymsk" | "Sri Jayawardenepura" | "St. Petersburg" | "Stockholm" | "Sydney" | "Taipei" | "Tallinn" | "Tashkent" | "Tbilisi" | "Tehran" | "Tijuana" | "Tokelau Is." | "Tokyo" | "Turkey" | "UCT" | "US/Alaska" | "US/Aleutian" | "US/Arizona" | "US/Central" | "US/East-Indiana" | "US/Eastern" | "US/Hawaii" | "US/Indiana-Starke" | "US/Michigan" | "US/Mountain" | "US/Pacific" | "US/Samoa" | "UTC" | "Ulaanbaatar" | "Universal" | "Urumqi" | "Vienna" | "Vilnius" | "Vladivostok" | "Volgograd" | "W-SU" | "WET" | "Warsaw" | "Wellington" | "West Central Africa" | "Yakutsk" | "Yerevan" | "Zagreb" | "Zulu" | "Zurich";
                /** @enum {string} */
                type?: "hidden_event" | "private_event" | "public_event";
              };
            };
          };
        };
      };
      responses: {
        /** @description Duplicates the event */
        202: never;
        /** @description authentication failed */
        401: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description Returns a request forbidden error */
        403: never;
        /** @description not found */
        404: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description Returns an event validation error */
        422: never;
      };
    };
  };
  "/v1/events/{eventId}/registrations": {
    /** Returns the list of registrations for user's event */
    get: {
      /** Returns the list of registrations for user's event */
      parameters: {
        path: {
          eventId: string;
        };
      };
      responses: {
        /** @description returns registrations list */
        200: {
          content: {
            "application/json": {
              data: (components["schemas"]["registration"])[];
              meta: components["schemas"]["listMeta"];
              links: components["schemas"]["listLinks"];
            };
          };
        };
        /** @description Field value has the wrong type */
        400: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description authentication failed */
        401: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description not found */
        404: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
      };
    };
  };
  "/v1/registrations/{registrationId}": {
    /** Returns registration details */
    get: {
      /** Returns registration details */
      parameters: {
        path: {
          registrationId: string;
        };
      };
      responses: {
        /** @description returns registration */
        200: {
          content: {
            "application/json": {
              data: components["schemas"]["registration"];
            };
          };
        };
        /** @description authentication failed */
        401: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description not found */
        404: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
      };
    };
    /** Update registration */
    patch: {
      /** Update registration */
      parameters: {
        path: {
          registrationId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": {
            data: {
              /**
               * @description Resource type 
               * @enum {string}
               */
              type: "Registration";
              attributes: {
                metadata?: {
                  [key: string]: string | undefined;
                };
              };
            };
          };
        };
      };
      responses: {
        /** @description returns registration */
        200: {
          content: {
            "application/json": {
              data: components["schemas"]["registration"];
            };
          };
        };
        /** @description authentication failed */
        401: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description not found */
        404: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description Shows errors */
        422: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
      };
    };
  };
  "/v1/reports/{reportId}/download": {
    /** Direct report file download */
    get: {
      /** Direct report file download */
      parameters: {
        path: {
          reportId: string;
        };
      };
      responses: {
        /** @description Returns report file */
        200: never;
        /** @description authentication failed */
        401: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description not found */
        404: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
      };
    };
  };
  "/v1/events/{eventId}/reports": {
    /** Get reports list */
    get: {
      /** Get reports list */
      responses: {
        /** @description Returns report list */
        200: {
          content: {
            "application/json": {
              data: (components["schemas"]["report"])[];
              meta: components["schemas"]["listMeta"];
              links: components["schemas"]["listLinks"];
            };
          };
        };
        /** @description authentication failed */
        401: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description not found */
        404: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
      };
    };
  };
  "/v1/reports/{reportId}": {
    /** Get report details */
    get: {
      /** Get report details */
      parameters: {
        path: {
          reportId: string;
        };
      };
      responses: {
        /** @description Returns report details */
        200: {
          content: {
            "application/json": {
              data: components["schemas"]["report"];
            };
          };
        };
        /** @description Returns message */
        202: {
          content: {
            "application/json": {
              data: components["schemas"]["in_progress_report"];
            };
          };
        };
        /** @description authentication failed */
        401: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description not found */
        404: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
      };
    };
  };
  "/v1/events/{eventId}/reports/{reportType}": {
    /** Create report for an event */
    post: {
      /** Create report for an event */
      parameters: {
        path: {
          eventId: string;
          reportType: "all" | "attendees" | "attendeeActivity" | "attendeeFeedback" | "attendeeScore" | "postEventSurvey" | "boothAttendee" | "boothInteraction" | "chat" | "connection" | "noShows" | "participation" | "registrations" | "registrants" | "schedule" | "schedules" | "summary" | "referrals" | "viewership" | "activitiesValidar" | "segmentRegistrations" | "agenda" | "replayRecordings" | "replayViewers";
        };
      };
      requestBody?: {
        content: {
          "application/json": {
            data?: {
              attributes?: {
                /** @enum {string} */
                participationReportType?: "expo" | "schedule" | "session" | "stage" | "all";
                participationTypeId?: string;
              };
            };
          };
        };
      };
      responses: {
        /** @description Creates participant report */
        201: {
          content: {
            "application/json": {
              data: components["schemas"]["report"];
            };
          };
        };
        /** @description authentication failed */
        401: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description not found */
        404: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description Returns participation report id is invalid error */
        422: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
      };
    };
  };
  "/v1/scheduleItems/:scheduleId/tags": {
    /** Returns the list of tags for a ScheduleItem */
    get: {
      /** Returns the list of tags for a ScheduleItem */
      parameters: {
        path: {
          eventId: string;
        };
      };
      responses: {
        /** @description Returns the list of tags for a schedule */
        200: {
          content: {
            "application/json": {
              data: (components["schemas"]["tag"])[];
              meta: components["schemas"]["listMeta"];
              links: components["schemas"]["listLinks"];
            };
          };
        };
        /** @description authentication failed */
        401: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description not found */
        404: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
      };
    };
  };
  "/v1/events/{eventId}/scheduleItems": {
    /** Returns the list of schedule items for user's organization's event */
    get: {
      /** Returns the list of schedule items for user's organization's event */
      parameters: {
        path: {
          eventId: string;
        };
      };
      responses: {
        /** @description Returns the list of schedules for user's organization's event */
        200: {
          content: {
            "application/json": {
              data: (components["schemas"]["scheduleItem"])[];
              meta: components["schemas"]["listMeta"];
              links: components["schemas"]["listLinks"];
            };
          };
        };
        /** @description authentication failed */
        401: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description not found */
        404: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
      };
    };
  };
  "/v1/scheduleItems/{scheduleItemId}": {
    /** Returns the a scheduled item by id */
    get: {
      /** Returns the a scheduled item by id */
      parameters: {
        path: {
          scheduleItemId: string;
        };
      };
      responses: {
        /** @description Returns the a scheduled item by id */
        200: {
          content: {
            "application/json": {
              data: components["schemas"]["scheduleItem"];
            };
          };
        };
        /** @description Not found */
        404: never;
      };
    };
  };
  "/v1/events/{eventId}/sessions": {
    /** Returns the list of sessions for user's organization's event */
    get: {
      /** Returns the list of sessions for user's organization's event */
      parameters: {
        path: {
          eventId: string;
        };
      };
      responses: {
        /** @description Returns the list of sessions for user's organization's event */
        200: {
          content: {
            "application/json": {
              data: (components["schemas"]["session"])[];
              meta: components["schemas"]["listMeta"];
              links: components["schemas"]["listLinks"];
            };
          };
        };
        /** @description authentication failed */
        401: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description not found */
        404: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
      };
    };
  };
  "/v1/events/{eventId}/stages": {
    /** Returns the list of stages for user's organization's event */
    get: {
      /** Returns the list of stages for user's organization's event */
      parameters: {
        path: {
          eventId: string;
        };
      };
      responses: {
        /** @description Returns the list of stages for user's organization's event */
        200: {
          content: {
            "application/json": {
              data: (components["schemas"]["stage"])[];
              meta: components["schemas"]["listMeta"];
              links: components["schemas"]["listLinks"];
            };
          };
        };
        /** @description authentication failed */
        401: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description not found */
        404: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
      };
    };
  };
  "/v1/tickets/{ticketId}/magicLinks": {
    /** Returns the list of magic links for given ticket type */
    get: {
      /** Returns the list of magic links for given ticket type */
      parameters: {
        path: {
          ticketId: string;
        };
      };
      responses: {
        /** @description returns magic links list */
        200: {
          content: {
            "application/json": {
              data: (components["schemas"]["magicLink"])[];
              meta: components["schemas"]["listMeta"];
              links: components["schemas"]["listLinks"];
            };
          };
        };
        /** @description Invalid filter params, please use allowed ones: updatedAt, email */
        400: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description authentication failed */
        401: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description not found */
        404: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
      };
    };
    /** Creates magic link for given ticket type */
    post: {
      /** Creates magic link for given ticket type */
      parameters: {
        path: {
          ticketId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": {
            data: {
              /**
               * @description Resource type 
               * @enum {string}
               */
              type: "magicLink";
              attributes: {
                email: string;
                extraFields?: {
                  [key: string]: string | undefined;
                };
                firstName: string;
                headline?: string;
                lastName: string;
                metadata?: {
                  [key: string]: string | undefined;
                };
                registrationId?: string;
              };
            };
          };
        };
      };
      responses: {
        /** @description Creates magic link */
        201: {
          content: {
            "application/json": {
              data: components["schemas"]["magicLink"];
            };
          };
        };
        /** @description authentication failed */
        401: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description not found */
        404: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description Shows errors */
        422: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
      };
    };
  };
  "/v1/magicLinks/{magicLinkId}": {
    /** Returns magic link for given ticket type */
    get: {
      /** Returns magic link for given ticket type */
      parameters: {
        path: {
          magicLinkId: string;
        };
      };
      responses: {
        /** @description returns magic link */
        200: {
          content: {
            "application/json": {
              data: components["schemas"]["magicLink"];
            };
          };
        };
        /** @description authentication failed */
        401: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description not found */
        404: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
      };
    };
    /** Deletes magic link for given ticket type */
    delete: {
      /** Deletes magic link for given ticket type */
      parameters: {
        path: {
          magicLinkId: string;
        };
      };
      responses: {
        /** @description deletes magicLink */
        204: never;
        /** @description authentication failed */
        401: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description not found */
        404: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
      };
    };
  };
  "/v1/events/{eventId}/tickets": {
    /** Returns the list of tickets for user's organization's event */
    get: {
      /** Returns the list of tickets for user's organization's event */
      parameters: {
        path: {
          eventId: string;
        };
      };
      responses: {
        /** @description Returns the list of tickets for user's organization's event */
        200: {
          content: {
            "application/json": {
              data: (components["schemas"]["ticket"])[];
              meta: components["schemas"]["listMeta"];
              links: components["schemas"]["listLinks"];
            };
          };
        };
        /** @description authentication failed */
        401: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description not found */
        404: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
      };
    };
    /**
     * Creates ticket 
     * @description ![Beta](https://img.shields.io/badge/Status-Beta-yellow)
     */
    post: {
      /**
       * Creates ticket 
       * @description ![Beta](https://img.shields.io/badge/Status-Beta-yellow)
       */
      parameters: {
        path: {
          eventId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": {
            data: {
              /**
               * @description Resource type 
               * @enum {string}
               */
              type: "ticket";
              attributes: {
                count?: number;
                description?: string;
                name?: string;
                price?: number;
                private?: boolean;
              };
            };
          };
        };
      };
      responses: {
        /** @description Creates ticket */
        201: {
          content: {
            "application/json": {
              data: components["schemas"]["ticket"];
            };
          };
        };
        /** @description authentication failed */
        401: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description not found */
        404: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description Shows errors */
        422: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
      };
    };
  };
  "/v1/tickets/{ticketId}": {
    /** Returns ticket details */
    get: {
      /** Returns ticket details */
      parameters: {
        path: {
          ticketId: string;
        };
      };
      responses: {
        /** @description Returns the details about user's event's ticket by organization id and event id */
        200: {
          content: {
            "application/json": {
              data: components["schemas"]["ticket"];
            };
          };
        };
        /** @description authentication failed */
        401: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description not found */
        404: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
      };
    };
  };
  "/v1/organizations/{organizationId}/events": {
    /** Returns the list of the organization's events */
    get: {
      /** Returns the list of the organization's events */
      parameters: {
        path: {
          organizationId: string;
        };
      };
      responses: {
        /** @description Returns the list of user's organization's events by organization id */
        200: {
          content: {
            "application/json": {
              data: (components["schemas"]["event"])[];
              meta: components["schemas"]["listMeta"];
              links: components["schemas"]["listLinks"];
            };
          };
        };
        /** @description authentication failed */
        401: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description not found */
        404: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
      };
    };
    /** Creates an event for the organization */
    post: {
      /** Creates an event for the organization */
      parameters: {
        path: {
          organizationId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": {
            data: {
              /**
               * @description Resource type 
               * @enum {string}
               */
              type: "event";
              attributes: {
                analyticsCode?: string;
                /**
                 * @description Controls how user sees other registered users 
                 * @enum {string}
                 */
                attendeesVisibility?: "show_all" | "show_list" | "show_none";
                /**
                 * @description Do not use this field, it is deprecated, use attendeesVisiblity instead 
                 * @enum {string}
                 */
                attendeesVisiblity?: "show_all" | "show_list" | "show_none";
                /** @description color in HEX format ("#fff") */
                color?: string;
                currency: string;
                description?: string;
                doorsCloseAfterMinutes?: number;
                doorsOpenBeforeMinutes?: number;
                /** @enum {string} */
                eventType?: "hidden_event" | "private_event" | "public_event";
                gdprText?: string;
                hidePeopleArea?: boolean;
                message?: string;
                name: string;
                /** @enum {string} */
                networkType?: "everyone" | "ticket_holder";
                /** Format: password */
                password?: string;
                shortDescription?: string;
                slug?: string;
                suppressEmails?: boolean;
                /**
                 * Format: date-time 
                 * @description Event end time
                 */
                timeEnd: string;
                /**
                 * Format: date-time 
                 * @description Event start time
                 */
                timeStart: string;
                timerLength?: number;
                /** @enum {string} */
                timezone: "Abu Dhabi" | "Adelaide" | "Africa/Abidjan" | "Africa/Accra" | "Africa/Addis_Ababa" | "Africa/Algiers" | "Africa/Asmara" | "Africa/Asmera" | "Africa/Bamako" | "Africa/Bangui" | "Africa/Banjul" | "Africa/Bissau" | "Africa/Blantyre" | "Africa/Brazzaville" | "Africa/Bujumbura" | "Africa/Cairo" | "Africa/Casablanca" | "Africa/Ceuta" | "Africa/Conakry" | "Africa/Dakar" | "Africa/Dar_es_Salaam" | "Africa/Djibouti" | "Africa/Douala" | "Africa/El_Aaiun" | "Africa/Freetown" | "Africa/Gaborone" | "Africa/Harare" | "Africa/Johannesburg" | "Africa/Juba" | "Africa/Kampala" | "Africa/Khartoum" | "Africa/Kigali" | "Africa/Kinshasa" | "Africa/Lagos" | "Africa/Libreville" | "Africa/Lome" | "Africa/Luanda" | "Africa/Lubumbashi" | "Africa/Lusaka" | "Africa/Malabo" | "Africa/Maputo" | "Africa/Maseru" | "Africa/Mbabane" | "Africa/Mogadishu" | "Africa/Monrovia" | "Africa/Nairobi" | "Africa/Ndjamena" | "Africa/Niamey" | "Africa/Nouakchott" | "Africa/Ouagadougou" | "Africa/Porto-Novo" | "Africa/Sao_Tome" | "Africa/Timbuktu" | "Africa/Tripoli" | "Africa/Tunis" | "Africa/Windhoek" | "Alaska" | "Almaty" | "America/Adak" | "America/Anchorage" | "America/Anguilla" | "America/Antigua" | "America/Araguaina" | "America/Argentina/Buenos_Aires" | "America/Argentina/Catamarca" | "America/Argentina/ComodRivadavia" | "America/Argentina/Cordoba" | "America/Argentina/Jujuy" | "America/Argentina/La_Rioja" | "America/Argentina/Mendoza" | "America/Argentina/Rio_Gallegos" | "America/Argentina/Salta" | "America/Argentina/San_Juan" | "America/Argentina/San_Luis" | "America/Argentina/Tucuman" | "America/Argentina/Ushuaia" | "America/Aruba" | "America/Asuncion" | "America/Atikokan" | "America/Atka" | "America/Bahia" | "America/Bahia_Banderas" | "America/Barbados" | "America/Belem" | "America/Belize" | "America/Blanc-Sablon" | "America/Boa_Vista" | "America/Bogota" | "America/Boise" | "America/Buenos_Aires" | "America/Cambridge_Bay" | "America/Campo_Grande" | "America/Cancun" | "America/Caracas" | "America/Catamarca" | "America/Cayenne" | "America/Cayman" | "America/Chicago" | "America/Chihuahua" | "America/Coral_Harbour" | "America/Cordoba" | "America/Costa_Rica" | "America/Creston" | "America/Cuiaba" | "America/Curacao" | "America/Danmarkshavn" | "America/Dawson" | "America/Dawson_Creek" | "America/Denver" | "America/Detroit" | "America/Dominica" | "America/Edmonton" | "America/Eirunepe" | "America/El_Salvador" | "America/Ensenada" | "America/Fort_Nelson" | "America/Fort_Wayne" | "America/Fortaleza" | "America/Glace_Bay" | "America/Godthab" | "America/Goose_Bay" | "America/Grand_Turk" | "America/Grenada" | "America/Guadeloupe" | "America/Guatemala" | "America/Guayaquil" | "America/Guyana" | "America/Halifax" | "America/Havana" | "America/Hermosillo" | "America/Indiana/Indianapolis" | "America/Indiana/Knox" | "America/Indiana/Marengo" | "America/Indiana/Petersburg" | "America/Indiana/Tell_City" | "America/Indiana/Vevay" | "America/Indiana/Vincennes" | "America/Indiana/Winamac" | "America/Indianapolis" | "America/Inuvik" | "America/Iqaluit" | "America/Jamaica" | "America/Jujuy" | "America/Juneau" | "America/Kentucky/Louisville" | "America/Kentucky/Monticello" | "America/Knox_IN" | "America/Kralendijk" | "America/La_Paz" | "America/Lima" | "America/Los_Angeles" | "America/Louisville" | "America/Lower_Princes" | "America/Maceio" | "America/Managua" | "America/Manaus" | "America/Marigot" | "America/Martinique" | "America/Matamoros" | "America/Mazatlan" | "America/Mendoza" | "America/Menominee" | "America/Merida" | "America/Metlakatla" | "America/Mexico_City" | "America/Miquelon" | "America/Moncton" | "America/Monterrey" | "America/Montevideo" | "America/Montreal" | "America/Montserrat" | "America/Nassau" | "America/New_York" | "America/Nipigon" | "America/Nome" | "America/Noronha" | "America/North_Dakota/Beulah" | "America/North_Dakota/Center" | "America/North_Dakota/New_Salem" | "America/Nuuk" | "America/Ojinaga" | "America/Panama" | "America/Pangnirtung" | "America/Paramaribo" | "America/Phoenix" | "America/Port-au-Prince" | "America/Port_of_Spain" | "America/Porto_Acre" | "America/Porto_Velho" | "America/Puerto_Rico" | "America/Punta_Arenas" | "America/Rainy_River" | "America/Rankin_Inlet" | "America/Recife" | "America/Regina" | "America/Resolute" | "America/Rio_Branco" | "America/Rosario" | "America/Santa_Isabel" | "America/Santarem" | "America/Santiago" | "America/Santo_Domingo" | "America/Sao_Paulo" | "America/Scoresbysund" | "America/Shiprock" | "America/Sitka" | "America/St_Barthelemy" | "America/St_Johns" | "America/St_Kitts" | "America/St_Lucia" | "America/St_Thomas" | "America/St_Vincent" | "America/Swift_Current" | "America/Tegucigalpa" | "America/Thule" | "America/Thunder_Bay" | "America/Tijuana" | "America/Toronto" | "America/Tortola" | "America/Vancouver" | "America/Virgin" | "America/Whitehorse" | "America/Winnipeg" | "America/Yakutat" | "America/Yellowknife" | "American Samoa" | "Amsterdam" | "Antarctica/Casey" | "Antarctica/Davis" | "Antarctica/DumontDUrville" | "Antarctica/Macquarie" | "Antarctica/Mawson" | "Antarctica/McMurdo" | "Antarctica/Palmer" | "Antarctica/Rothera" | "Antarctica/South_Pole" | "Antarctica/Syowa" | "Antarctica/Troll" | "Antarctica/Vostok" | "Arctic/Longyearbyen" | "Arizona" | "Asia/Aden" | "Asia/Almaty" | "Asia/Amman" | "Asia/Anadyr" | "Asia/Aqtau" | "Asia/Aqtobe" | "Asia/Ashgabat" | "Asia/Ashkhabad" | "Asia/Atyrau" | "Asia/Baghdad" | "Asia/Bahrain" | "Asia/Baku" | "Asia/Bangkok" | "Asia/Barnaul" | "Asia/Beirut" | "Asia/Bishkek" | "Asia/Brunei" | "Asia/Calcutta" | "Asia/Chita" | "Asia/Choibalsan" | "Asia/Chongqing" | "Asia/Chungking" | "Asia/Colombo" | "Asia/Dacca" | "Asia/Damascus" | "Asia/Dhaka" | "Asia/Dili" | "Asia/Dubai" | "Asia/Dushanbe" | "Asia/Famagusta" | "Asia/Gaza" | "Asia/Harbin" | "Asia/Hebron" | "Asia/Ho_Chi_Minh" | "Asia/Hong_Kong" | "Asia/Hovd" | "Asia/Irkutsk" | "Asia/Istanbul" | "Asia/Jakarta" | "Asia/Jayapura" | "Asia/Jerusalem" | "Asia/Kabul" | "Asia/Kamchatka" | "Asia/Karachi" | "Asia/Kashgar" | "Asia/Kathmandu" | "Asia/Katmandu" | "Asia/Khandyga" | "Asia/Kolkata" | "Asia/Krasnoyarsk" | "Asia/Kuala_Lumpur" | "Asia/Kuching" | "Asia/Kuwait" | "Asia/Macao" | "Asia/Macau" | "Asia/Magadan" | "Asia/Makassar" | "Asia/Manila" | "Asia/Muscat" | "Asia/Nicosia" | "Asia/Novokuznetsk" | "Asia/Novosibirsk" | "Asia/Omsk" | "Asia/Oral" | "Asia/Phnom_Penh" | "Asia/Pontianak" | "Asia/Pyongyang" | "Asia/Qatar" | "Asia/Qostanay" | "Asia/Qyzylorda" | "Asia/Rangoon" | "Asia/Riyadh" | "Asia/Saigon" | "Asia/Sakhalin" | "Asia/Samarkand" | "Asia/Seoul" | "Asia/Shanghai" | "Asia/Singapore" | "Asia/Srednekolymsk" | "Asia/Taipei" | "Asia/Tashkent" | "Asia/Tbilisi" | "Asia/Tehran" | "Asia/Tel_Aviv" | "Asia/Thimbu" | "Asia/Thimphu" | "Asia/Tokyo" | "Asia/Tomsk" | "Asia/Ujung_Pandang" | "Asia/Ulaanbaatar" | "Asia/Ulan_Bator" | "Asia/Urumqi" | "Asia/Ust-Nera" | "Asia/Vientiane" | "Asia/Vladivostok" | "Asia/Yakutsk" | "Asia/Yangon" | "Asia/Yekaterinburg" | "Asia/Yerevan" | "Astana" | "Athens" | "Atlantic Time (Canada)" | "Atlantic/Azores" | "Atlantic/Bermuda" | "Atlantic/Canary" | "Atlantic/Cape_Verde" | "Atlantic/Faeroe" | "Atlantic/Faroe" | "Atlantic/Jan_Mayen" | "Atlantic/Madeira" | "Atlantic/Reykjavik" | "Atlantic/South_Georgia" | "Atlantic/St_Helena" | "Atlantic/Stanley" | "Auckland" | "Australia/ACT" | "Australia/Adelaide" | "Australia/Brisbane" | "Australia/Broken_Hill" | "Australia/Canberra" | "Australia/Currie" | "Australia/Darwin" | "Australia/Eucla" | "Australia/Hobart" | "Australia/LHI" | "Australia/Lindeman" | "Australia/Lord_Howe" | "Australia/Melbourne" | "Australia/NSW" | "Australia/North" | "Australia/Perth" | "Australia/Queensland" | "Australia/South" | "Australia/Sydney" | "Australia/Tasmania" | "Australia/Victoria" | "Australia/West" | "Australia/Yancowinna" | "Azores" | "Baghdad" | "Baku" | "Bangkok" | "Beijing" | "Belgrade" | "Berlin" | "Bern" | "Bogota" | "Brasilia" | "Bratislava" | "Brazil/Acre" | "Brazil/DeNoronha" | "Brazil/East" | "Brazil/West" | "Brisbane" | "Brussels" | "Bucharest" | "Budapest" | "Buenos Aires" | "CET" | "CST6CDT" | "Cairo" | "Canada/Atlantic" | "Canada/Central" | "Canada/Eastern" | "Canada/Mountain" | "Canada/Newfoundland" | "Canada/Pacific" | "Canada/Saskatchewan" | "Canada/Yukon" | "Canberra" | "Cape Verde Is." | "Caracas" | "Casablanca" | "Central America" | ("Central Time (US & Canada)") | "Chatham Is." | "Chennai" | "Chihuahua" | "Chile/Continental" | "Chile/EasterIsland" | "Chongqing" | "Copenhagen" | "Cuba" | "Darwin" | "Dhaka" | "Dublin" | "EET" | "EST" | "EST5EDT" | ("Eastern Time (US & Canada)") | "Edinburgh" | "Egypt" | "Eire" | "Ekaterinburg" | "Etc/GMT" | "Etc/GMT+0" | "Etc/GMT+1" | "Etc/GMT+10" | "Etc/GMT+11" | "Etc/GMT+12" | "Etc/GMT+2" | "Etc/GMT+3" | "Etc/GMT+4" | "Etc/GMT+5" | "Etc/GMT+6" | "Etc/GMT+7" | "Etc/GMT+8" | "Etc/GMT+9" | "Etc/GMT-0" | "Etc/GMT-1" | "Etc/GMT-10" | "Etc/GMT-11" | "Etc/GMT-12" | "Etc/GMT-13" | "Etc/GMT-14" | "Etc/GMT-2" | "Etc/GMT-3" | "Etc/GMT-4" | "Etc/GMT-5" | "Etc/GMT-6" | "Etc/GMT-7" | "Etc/GMT-8" | "Etc/GMT-9" | "Etc/GMT0" | "Etc/Greenwich" | "Etc/UCT" | "Etc/UTC" | "Etc/Universal" | "Etc/Zulu" | "Europe/Amsterdam" | "Europe/Andorra" | "Europe/Astrakhan" | "Europe/Athens" | "Europe/Belfast" | "Europe/Belgrade" | "Europe/Berlin" | "Europe/Bratislava" | "Europe/Brussels" | "Europe/Bucharest" | "Europe/Budapest" | "Europe/Busingen" | "Europe/Chisinau" | "Europe/Copenhagen" | "Europe/Dublin" | "Europe/Gibraltar" | "Europe/Guernsey" | "Europe/Helsinki" | "Europe/Isle_of_Man" | "Europe/Istanbul" | "Europe/Jersey" | "Europe/Kaliningrad" | "Europe/Kiev" | "Europe/Kirov" | "Europe/Lisbon" | "Europe/Ljubljana" | "Europe/London" | "Europe/Luxembourg" | "Europe/Madrid" | "Europe/Malta" | "Europe/Mariehamn" | "Europe/Minsk" | "Europe/Monaco" | "Europe/Moscow" | "Europe/Nicosia" | "Europe/Oslo" | "Europe/Paris" | "Europe/Podgorica" | "Europe/Prague" | "Europe/Riga" | "Europe/Rome" | "Europe/Samara" | "Europe/San_Marino" | "Europe/Sarajevo" | "Europe/Saratov" | "Europe/Simferopol" | "Europe/Skopje" | "Europe/Sofia" | "Europe/Stockholm" | "Europe/Tallinn" | "Europe/Tirane" | "Europe/Tiraspol" | "Europe/Ulyanovsk" | "Europe/Uzhgorod" | "Europe/Vaduz" | "Europe/Vatican" | "Europe/Vienna" | "Europe/Vilnius" | "Europe/Volgograd" | "Europe/Warsaw" | "Europe/Zagreb" | "Europe/Zaporozhye" | "Europe/Zurich" | "Factory" | "Fiji" | "GB" | "GB-Eire" | "GMT" | "GMT+0" | "GMT-0" | "GMT0" | "Georgetown" | "Greenland" | "Greenwich" | "Guadalajara" | "Guam" | "HST" | "Hanoi" | "Harare" | "Hawaii" | "Helsinki" | "Hobart" | "Hong Kong" | "Hongkong" | "Iceland" | "Indian/Antananarivo" | "Indian/Chagos" | "Indian/Christmas" | "Indian/Cocos" | "Indian/Comoro" | "Indian/Kerguelen" | "Indian/Mahe" | "Indian/Maldives" | "Indian/Mauritius" | "Indian/Mayotte" | "Indian/Reunion" | "Indiana (East)" | "International Date Line West" | "Iran" | "Irkutsk" | "Islamabad" | "Israel" | "Istanbul" | "Jakarta" | "Jamaica" | "Japan" | "Jerusalem" | "Kabul" | "Kaliningrad" | "Kamchatka" | "Karachi" | "Kathmandu" | "Kolkata" | "Krasnoyarsk" | "Kuala Lumpur" | "Kuwait" | "Kwajalein" | "Kyiv" | "La Paz" | "Libya" | "Lima" | "Lisbon" | "Ljubljana" | "London" | "MET" | "MST" | "MST7MDT" | "Madrid" | "Magadan" | "Marshall Is." | "Mazatlan" | "Melbourne" | "Mexico City" | "Mexico/BajaNorte" | "Mexico/BajaSur" | "Mexico/General" | "Mid-Atlantic" | "Midway Island" | "Minsk" | "Monrovia" | "Monterrey" | "Montevideo" | "Moscow" | ("Mountain Time (US & Canada)") | "Mumbai" | "Muscat" | "NZ" | "NZ-CHAT" | "Nairobi" | "Navajo" | "New Caledonia" | "New Delhi" | "Newfoundland" | "Novosibirsk" | "Nuku'alofa" | "Osaka" | "PRC" | "PST8PDT" | ("Pacific Time (US & Canada)") | "Pacific/Apia" | "Pacific/Auckland" | "Pacific/Bougainville" | "Pacific/Chatham" | "Pacific/Chuuk" | "Pacific/Easter" | "Pacific/Efate" | "Pacific/Enderbury" | "Pacific/Fakaofo" | "Pacific/Fiji" | "Pacific/Funafuti" | "Pacific/Galapagos" | "Pacific/Gambier" | "Pacific/Guadalcanal" | "Pacific/Guam" | "Pacific/Honolulu" | "Pacific/Johnston" | "Pacific/Kiritimati" | "Pacific/Kosrae" | "Pacific/Kwajalein" | "Pacific/Majuro" | "Pacific/Marquesas" | "Pacific/Midway" | "Pacific/Nauru" | "Pacific/Niue" | "Pacific/Norfolk" | "Pacific/Noumea" | "Pacific/Pago_Pago" | "Pacific/Palau" | "Pacific/Pitcairn" | "Pacific/Pohnpei" | "Pacific/Ponape" | "Pacific/Port_Moresby" | "Pacific/Rarotonga" | "Pacific/Saipan" | "Pacific/Samoa" | "Pacific/Tahiti" | "Pacific/Tarawa" | "Pacific/Tongatapu" | "Pacific/Truk" | "Pacific/Wake" | "Pacific/Wallis" | "Pacific/Yap" | "Paris" | "Perth" | "Poland" | "Port Moresby" | "Portugal" | "Prague" | "Pretoria" | "Puerto Rico" | "Quito" | "ROC" | "ROK" | "Rangoon" | "Riga" | "Riyadh" | "Rome" | "Samara" | "Samoa" | "Santiago" | "Sapporo" | "Sarajevo" | "Saskatchewan" | "Seoul" | "Singapore" | "Skopje" | "Sofia" | "Solomon Is." | "Srednekolymsk" | "Sri Jayawardenepura" | "St. Petersburg" | "Stockholm" | "Sydney" | "Taipei" | "Tallinn" | "Tashkent" | "Tbilisi" | "Tehran" | "Tijuana" | "Tokelau Is." | "Tokyo" | "Turkey" | "UCT" | "US/Alaska" | "US/Aleutian" | "US/Arizona" | "US/Central" | "US/East-Indiana" | "US/Eastern" | "US/Hawaii" | "US/Indiana-Starke" | "US/Michigan" | "US/Mountain" | "US/Pacific" | "US/Samoa" | "UTC" | "Ulaanbaatar" | "Universal" | "Urumqi" | "Vienna" | "Vilnius" | "Vladivostok" | "Volgograd" | "W-SU" | "WET" | "Warsaw" | "Wellington" | "West Central Africa" | "Yakutsk" | "Yerevan" | "Zagreb" | "Zulu" | "Zurich";
              };
            };
          };
        };
      };
      responses: {
        /** @description Creates an event and returns details */
        201: {
          content: {
            "application/json": {
              data: components["schemas"]["event"];
            };
          };
        };
        /** @description authentication failed */
        401: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description not found */
        404: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description unprocessable_entity */
        422: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
      };
    };
  };
  "/v1/events/{eventId}": {
    /** Returns event details */
    get: {
      /** Returns event details */
      parameters: {
        path: {
          eventId: string;
        };
      };
      responses: {
        /** @description Returns the details about user's organization's event by organization id and event id */
        200: {
          content: {
            "application/json": {
              data: components["schemas"]["event"];
            };
          };
        };
        /** @description authentication failed */
        401: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description not found */
        404: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
      };
    };
  };
  "/v1/organizations/{organizationId}/templates": {
    /** Returns the list of the organization's templates */
    get: {
      /** Returns the list of the organization's templates */
      parameters: {
        path: {
          organizationId: string;
        };
      };
      responses: {
        /** @description Returns the list of user's organization's templates by organization id */
        200: {
          content: {
            "application/json": {
              data: (components["schemas"]["template"])[];
            };
          };
        };
        /** @description authentication failed */
        401: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description not found */
        404: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
      };
    };
  };
  "/v1/organizations": {
    /** Returns the list of organizations property of the user */
    get: {
      /** Returns the list of organizations property of the user */
      responses: {
        /** @description Returns the list of organizations property of the user */
        200: {
          content: {
            "application/json": {
              data: (components["schemas"]["organization"])[];
              meta: components["schemas"]["listMeta"];
              links: components["schemas"]["listLinks"];
            };
          };
        };
        /** @description authentication failed */
        401: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
      };
    };
  };
  "/v1/organizations/{organizationId}": {
    /** Returns the details of the organization */
    get: {
      /** Returns the details of the organization */
      parameters: {
        path: {
          organizationId: string;
        };
      };
      responses: {
        /** @description Returns the details of user's organization by id */
        200: {
          content: {
            "application/json": {
              data: components["schemas"]["organization"];
            };
          };
        };
        /** @description authentication failed */
        401: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description not found */
        404: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
      };
    };
  };
  "/v1/magic_link": {
    /** Creates a redeem code for a ticket and organization */
    post: {
      /** Creates a redeem code for a ticket and organization */
      requestBody?: {
        content: {
          "application/json": {
            ticket_id: string;
            first_name: string;
            last_name: string;
            email: string;
            created_at?: string;
          };
        };
      };
      responses: {
        /** @description create redeem code and return magic link */
        201: {
          content: {
            "application/json": {
              data?: {
                id?: string;
                type?: string;
                attributes?: {
                  id?: string;
                  first_name?: string;
                  last_name?: string;
                  email?: string;
                  magic_link?: string;
                  registration_id?: string | null;
                  created_at?: string;
                };
              };
            };
          };
        };
        /** @description authentication failed */
        401: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description Organization does not have Magic links available in current plan */
        422: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
      };
    };
  };
  "/v1/templates/{templateID}/event": {
    /** Creates an event from the template */
    post: {
      /** Creates an event from the template */
      requestBody?: {
        content: {
          "application/json": {
            data: {
              /**
               * @description Resource type 
               * @enum {string}
               */
              type: "event";
              attributes: {
                auto_publish?: boolean;
                metadata?: Record<string, never>;
                name: string;
                organizationId: string;
                password?: string;
                /**
                 * Format: date-time 
                 * @description Event end time
                 */
                timeEnd: string;
                /**
                 * Format: date-time 
                 * @description Event start time
                 */
                timeStart: string;
                /** @enum {string} */
                timezone: "Abu Dhabi" | "Adelaide" | "Africa/Abidjan" | "Africa/Accra" | "Africa/Addis_Ababa" | "Africa/Algiers" | "Africa/Asmara" | "Africa/Asmera" | "Africa/Bamako" | "Africa/Bangui" | "Africa/Banjul" | "Africa/Bissau" | "Africa/Blantyre" | "Africa/Brazzaville" | "Africa/Bujumbura" | "Africa/Cairo" | "Africa/Casablanca" | "Africa/Ceuta" | "Africa/Conakry" | "Africa/Dakar" | "Africa/Dar_es_Salaam" | "Africa/Djibouti" | "Africa/Douala" | "Africa/El_Aaiun" | "Africa/Freetown" | "Africa/Gaborone" | "Africa/Harare" | "Africa/Johannesburg" | "Africa/Juba" | "Africa/Kampala" | "Africa/Khartoum" | "Africa/Kigali" | "Africa/Kinshasa" | "Africa/Lagos" | "Africa/Libreville" | "Africa/Lome" | "Africa/Luanda" | "Africa/Lubumbashi" | "Africa/Lusaka" | "Africa/Malabo" | "Africa/Maputo" | "Africa/Maseru" | "Africa/Mbabane" | "Africa/Mogadishu" | "Africa/Monrovia" | "Africa/Nairobi" | "Africa/Ndjamena" | "Africa/Niamey" | "Africa/Nouakchott" | "Africa/Ouagadougou" | "Africa/Porto-Novo" | "Africa/Sao_Tome" | "Africa/Timbuktu" | "Africa/Tripoli" | "Africa/Tunis" | "Africa/Windhoek" | "Alaska" | "Almaty" | "America/Adak" | "America/Anchorage" | "America/Anguilla" | "America/Antigua" | "America/Araguaina" | "America/Argentina/Buenos_Aires" | "America/Argentina/Catamarca" | "America/Argentina/ComodRivadavia" | "America/Argentina/Cordoba" | "America/Argentina/Jujuy" | "America/Argentina/La_Rioja" | "America/Argentina/Mendoza" | "America/Argentina/Rio_Gallegos" | "America/Argentina/Salta" | "America/Argentina/San_Juan" | "America/Argentina/San_Luis" | "America/Argentina/Tucuman" | "America/Argentina/Ushuaia" | "America/Aruba" | "America/Asuncion" | "America/Atikokan" | "America/Atka" | "America/Bahia" | "America/Bahia_Banderas" | "America/Barbados" | "America/Belem" | "America/Belize" | "America/Blanc-Sablon" | "America/Boa_Vista" | "America/Bogota" | "America/Boise" | "America/Buenos_Aires" | "America/Cambridge_Bay" | "America/Campo_Grande" | "America/Cancun" | "America/Caracas" | "America/Catamarca" | "America/Cayenne" | "America/Cayman" | "America/Chicago" | "America/Chihuahua" | "America/Coral_Harbour" | "America/Cordoba" | "America/Costa_Rica" | "America/Creston" | "America/Cuiaba" | "America/Curacao" | "America/Danmarkshavn" | "America/Dawson" | "America/Dawson_Creek" | "America/Denver" | "America/Detroit" | "America/Dominica" | "America/Edmonton" | "America/Eirunepe" | "America/El_Salvador" | "America/Ensenada" | "America/Fort_Nelson" | "America/Fort_Wayne" | "America/Fortaleza" | "America/Glace_Bay" | "America/Godthab" | "America/Goose_Bay" | "America/Grand_Turk" | "America/Grenada" | "America/Guadeloupe" | "America/Guatemala" | "America/Guayaquil" | "America/Guyana" | "America/Halifax" | "America/Havana" | "America/Hermosillo" | "America/Indiana/Indianapolis" | "America/Indiana/Knox" | "America/Indiana/Marengo" | "America/Indiana/Petersburg" | "America/Indiana/Tell_City" | "America/Indiana/Vevay" | "America/Indiana/Vincennes" | "America/Indiana/Winamac" | "America/Indianapolis" | "America/Inuvik" | "America/Iqaluit" | "America/Jamaica" | "America/Jujuy" | "America/Juneau" | "America/Kentucky/Louisville" | "America/Kentucky/Monticello" | "America/Knox_IN" | "America/Kralendijk" | "America/La_Paz" | "America/Lima" | "America/Los_Angeles" | "America/Louisville" | "America/Lower_Princes" | "America/Maceio" | "America/Managua" | "America/Manaus" | "America/Marigot" | "America/Martinique" | "America/Matamoros" | "America/Mazatlan" | "America/Mendoza" | "America/Menominee" | "America/Merida" | "America/Metlakatla" | "America/Mexico_City" | "America/Miquelon" | "America/Moncton" | "America/Monterrey" | "America/Montevideo" | "America/Montreal" | "America/Montserrat" | "America/Nassau" | "America/New_York" | "America/Nipigon" | "America/Nome" | "America/Noronha" | "America/North_Dakota/Beulah" | "America/North_Dakota/Center" | "America/North_Dakota/New_Salem" | "America/Nuuk" | "America/Ojinaga" | "America/Panama" | "America/Pangnirtung" | "America/Paramaribo" | "America/Phoenix" | "America/Port-au-Prince" | "America/Port_of_Spain" | "America/Porto_Acre" | "America/Porto_Velho" | "America/Puerto_Rico" | "America/Punta_Arenas" | "America/Rainy_River" | "America/Rankin_Inlet" | "America/Recife" | "America/Regina" | "America/Resolute" | "America/Rio_Branco" | "America/Rosario" | "America/Santa_Isabel" | "America/Santarem" | "America/Santiago" | "America/Santo_Domingo" | "America/Sao_Paulo" | "America/Scoresbysund" | "America/Shiprock" | "America/Sitka" | "America/St_Barthelemy" | "America/St_Johns" | "America/St_Kitts" | "America/St_Lucia" | "America/St_Thomas" | "America/St_Vincent" | "America/Swift_Current" | "America/Tegucigalpa" | "America/Thule" | "America/Thunder_Bay" | "America/Tijuana" | "America/Toronto" | "America/Tortola" | "America/Vancouver" | "America/Virgin" | "America/Whitehorse" | "America/Winnipeg" | "America/Yakutat" | "America/Yellowknife" | "American Samoa" | "Amsterdam" | "Antarctica/Casey" | "Antarctica/Davis" | "Antarctica/DumontDUrville" | "Antarctica/Macquarie" | "Antarctica/Mawson" | "Antarctica/McMurdo" | "Antarctica/Palmer" | "Antarctica/Rothera" | "Antarctica/South_Pole" | "Antarctica/Syowa" | "Antarctica/Troll" | "Antarctica/Vostok" | "Arctic/Longyearbyen" | "Arizona" | "Asia/Aden" | "Asia/Almaty" | "Asia/Amman" | "Asia/Anadyr" | "Asia/Aqtau" | "Asia/Aqtobe" | "Asia/Ashgabat" | "Asia/Ashkhabad" | "Asia/Atyrau" | "Asia/Baghdad" | "Asia/Bahrain" | "Asia/Baku" | "Asia/Bangkok" | "Asia/Barnaul" | "Asia/Beirut" | "Asia/Bishkek" | "Asia/Brunei" | "Asia/Calcutta" | "Asia/Chita" | "Asia/Choibalsan" | "Asia/Chongqing" | "Asia/Chungking" | "Asia/Colombo" | "Asia/Dacca" | "Asia/Damascus" | "Asia/Dhaka" | "Asia/Dili" | "Asia/Dubai" | "Asia/Dushanbe" | "Asia/Famagusta" | "Asia/Gaza" | "Asia/Harbin" | "Asia/Hebron" | "Asia/Ho_Chi_Minh" | "Asia/Hong_Kong" | "Asia/Hovd" | "Asia/Irkutsk" | "Asia/Istanbul" | "Asia/Jakarta" | "Asia/Jayapura" | "Asia/Jerusalem" | "Asia/Kabul" | "Asia/Kamchatka" | "Asia/Karachi" | "Asia/Kashgar" | "Asia/Kathmandu" | "Asia/Katmandu" | "Asia/Khandyga" | "Asia/Kolkata" | "Asia/Krasnoyarsk" | "Asia/Kuala_Lumpur" | "Asia/Kuching" | "Asia/Kuwait" | "Asia/Macao" | "Asia/Macau" | "Asia/Magadan" | "Asia/Makassar" | "Asia/Manila" | "Asia/Muscat" | "Asia/Nicosia" | "Asia/Novokuznetsk" | "Asia/Novosibirsk" | "Asia/Omsk" | "Asia/Oral" | "Asia/Phnom_Penh" | "Asia/Pontianak" | "Asia/Pyongyang" | "Asia/Qatar" | "Asia/Qostanay" | "Asia/Qyzylorda" | "Asia/Rangoon" | "Asia/Riyadh" | "Asia/Saigon" | "Asia/Sakhalin" | "Asia/Samarkand" | "Asia/Seoul" | "Asia/Shanghai" | "Asia/Singapore" | "Asia/Srednekolymsk" | "Asia/Taipei" | "Asia/Tashkent" | "Asia/Tbilisi" | "Asia/Tehran" | "Asia/Tel_Aviv" | "Asia/Thimbu" | "Asia/Thimphu" | "Asia/Tokyo" | "Asia/Tomsk" | "Asia/Ujung_Pandang" | "Asia/Ulaanbaatar" | "Asia/Ulan_Bator" | "Asia/Urumqi" | "Asia/Ust-Nera" | "Asia/Vientiane" | "Asia/Vladivostok" | "Asia/Yakutsk" | "Asia/Yangon" | "Asia/Yekaterinburg" | "Asia/Yerevan" | "Astana" | "Athens" | "Atlantic Time (Canada)" | "Atlantic/Azores" | "Atlantic/Bermuda" | "Atlantic/Canary" | "Atlantic/Cape_Verde" | "Atlantic/Faeroe" | "Atlantic/Faroe" | "Atlantic/Jan_Mayen" | "Atlantic/Madeira" | "Atlantic/Reykjavik" | "Atlantic/South_Georgia" | "Atlantic/St_Helena" | "Atlantic/Stanley" | "Auckland" | "Australia/ACT" | "Australia/Adelaide" | "Australia/Brisbane" | "Australia/Broken_Hill" | "Australia/Canberra" | "Australia/Currie" | "Australia/Darwin" | "Australia/Eucla" | "Australia/Hobart" | "Australia/LHI" | "Australia/Lindeman" | "Australia/Lord_Howe" | "Australia/Melbourne" | "Australia/NSW" | "Australia/North" | "Australia/Perth" | "Australia/Queensland" | "Australia/South" | "Australia/Sydney" | "Australia/Tasmania" | "Australia/Victoria" | "Australia/West" | "Australia/Yancowinna" | "Azores" | "Baghdad" | "Baku" | "Bangkok" | "Beijing" | "Belgrade" | "Berlin" | "Bern" | "Bogota" | "Brasilia" | "Bratislava" | "Brazil/Acre" | "Brazil/DeNoronha" | "Brazil/East" | "Brazil/West" | "Brisbane" | "Brussels" | "Bucharest" | "Budapest" | "Buenos Aires" | "CET" | "CST6CDT" | "Cairo" | "Canada/Atlantic" | "Canada/Central" | "Canada/Eastern" | "Canada/Mountain" | "Canada/Newfoundland" | "Canada/Pacific" | "Canada/Saskatchewan" | "Canada/Yukon" | "Canberra" | "Cape Verde Is." | "Caracas" | "Casablanca" | "Central America" | ("Central Time (US & Canada)") | "Chatham Is." | "Chennai" | "Chihuahua" | "Chile/Continental" | "Chile/EasterIsland" | "Chongqing" | "Copenhagen" | "Cuba" | "Darwin" | "Dhaka" | "Dublin" | "EET" | "EST" | "EST5EDT" | ("Eastern Time (US & Canada)") | "Edinburgh" | "Egypt" | "Eire" | "Ekaterinburg" | "Etc/GMT" | "Etc/GMT+0" | "Etc/GMT+1" | "Etc/GMT+10" | "Etc/GMT+11" | "Etc/GMT+12" | "Etc/GMT+2" | "Etc/GMT+3" | "Etc/GMT+4" | "Etc/GMT+5" | "Etc/GMT+6" | "Etc/GMT+7" | "Etc/GMT+8" | "Etc/GMT+9" | "Etc/GMT-0" | "Etc/GMT-1" | "Etc/GMT-10" | "Etc/GMT-11" | "Etc/GMT-12" | "Etc/GMT-13" | "Etc/GMT-14" | "Etc/GMT-2" | "Etc/GMT-3" | "Etc/GMT-4" | "Etc/GMT-5" | "Etc/GMT-6" | "Etc/GMT-7" | "Etc/GMT-8" | "Etc/GMT-9" | "Etc/GMT0" | "Etc/Greenwich" | "Etc/UCT" | "Etc/UTC" | "Etc/Universal" | "Etc/Zulu" | "Europe/Amsterdam" | "Europe/Andorra" | "Europe/Astrakhan" | "Europe/Athens" | "Europe/Belfast" | "Europe/Belgrade" | "Europe/Berlin" | "Europe/Bratislava" | "Europe/Brussels" | "Europe/Bucharest" | "Europe/Budapest" | "Europe/Busingen" | "Europe/Chisinau" | "Europe/Copenhagen" | "Europe/Dublin" | "Europe/Gibraltar" | "Europe/Guernsey" | "Europe/Helsinki" | "Europe/Isle_of_Man" | "Europe/Istanbul" | "Europe/Jersey" | "Europe/Kaliningrad" | "Europe/Kiev" | "Europe/Kirov" | "Europe/Lisbon" | "Europe/Ljubljana" | "Europe/London" | "Europe/Luxembourg" | "Europe/Madrid" | "Europe/Malta" | "Europe/Mariehamn" | "Europe/Minsk" | "Europe/Monaco" | "Europe/Moscow" | "Europe/Nicosia" | "Europe/Oslo" | "Europe/Paris" | "Europe/Podgorica" | "Europe/Prague" | "Europe/Riga" | "Europe/Rome" | "Europe/Samara" | "Europe/San_Marino" | "Europe/Sarajevo" | "Europe/Saratov" | "Europe/Simferopol" | "Europe/Skopje" | "Europe/Sofia" | "Europe/Stockholm" | "Europe/Tallinn" | "Europe/Tirane" | "Europe/Tiraspol" | "Europe/Ulyanovsk" | "Europe/Uzhgorod" | "Europe/Vaduz" | "Europe/Vatican" | "Europe/Vienna" | "Europe/Vilnius" | "Europe/Volgograd" | "Europe/Warsaw" | "Europe/Zagreb" | "Europe/Zaporozhye" | "Europe/Zurich" | "Factory" | "Fiji" | "GB" | "GB-Eire" | "GMT" | "GMT+0" | "GMT-0" | "GMT0" | "Georgetown" | "Greenland" | "Greenwich" | "Guadalajara" | "Guam" | "HST" | "Hanoi" | "Harare" | "Hawaii" | "Helsinki" | "Hobart" | "Hong Kong" | "Hongkong" | "Iceland" | "Indian/Antananarivo" | "Indian/Chagos" | "Indian/Christmas" | "Indian/Cocos" | "Indian/Comoro" | "Indian/Kerguelen" | "Indian/Mahe" | "Indian/Maldives" | "Indian/Mauritius" | "Indian/Mayotte" | "Indian/Reunion" | "Indiana (East)" | "International Date Line West" | "Iran" | "Irkutsk" | "Islamabad" | "Israel" | "Istanbul" | "Jakarta" | "Jamaica" | "Japan" | "Jerusalem" | "Kabul" | "Kaliningrad" | "Kamchatka" | "Karachi" | "Kathmandu" | "Kolkata" | "Krasnoyarsk" | "Kuala Lumpur" | "Kuwait" | "Kwajalein" | "Kyiv" | "La Paz" | "Libya" | "Lima" | "Lisbon" | "Ljubljana" | "London" | "MET" | "MST" | "MST7MDT" | "Madrid" | "Magadan" | "Marshall Is." | "Mazatlan" | "Melbourne" | "Mexico City" | "Mexico/BajaNorte" | "Mexico/BajaSur" | "Mexico/General" | "Mid-Atlantic" | "Midway Island" | "Minsk" | "Monrovia" | "Monterrey" | "Montevideo" | "Moscow" | ("Mountain Time (US & Canada)") | "Mumbai" | "Muscat" | "NZ" | "NZ-CHAT" | "Nairobi" | "Navajo" | "New Caledonia" | "New Delhi" | "Newfoundland" | "Novosibirsk" | "Nuku'alofa" | "Osaka" | "PRC" | "PST8PDT" | ("Pacific Time (US & Canada)") | "Pacific/Apia" | "Pacific/Auckland" | "Pacific/Bougainville" | "Pacific/Chatham" | "Pacific/Chuuk" | "Pacific/Easter" | "Pacific/Efate" | "Pacific/Enderbury" | "Pacific/Fakaofo" | "Pacific/Fiji" | "Pacific/Funafuti" | "Pacific/Galapagos" | "Pacific/Gambier" | "Pacific/Guadalcanal" | "Pacific/Guam" | "Pacific/Honolulu" | "Pacific/Johnston" | "Pacific/Kiritimati" | "Pacific/Kosrae" | "Pacific/Kwajalein" | "Pacific/Majuro" | "Pacific/Marquesas" | "Pacific/Midway" | "Pacific/Nauru" | "Pacific/Niue" | "Pacific/Norfolk" | "Pacific/Noumea" | "Pacific/Pago_Pago" | "Pacific/Palau" | "Pacific/Pitcairn" | "Pacific/Pohnpei" | "Pacific/Ponape" | "Pacific/Port_Moresby" | "Pacific/Rarotonga" | "Pacific/Saipan" | "Pacific/Samoa" | "Pacific/Tahiti" | "Pacific/Tarawa" | "Pacific/Tongatapu" | "Pacific/Truk" | "Pacific/Wake" | "Pacific/Wallis" | "Pacific/Yap" | "Paris" | "Perth" | "Poland" | "Port Moresby" | "Portugal" | "Prague" | "Pretoria" | "Puerto Rico" | "Quito" | "ROC" | "ROK" | "Rangoon" | "Riga" | "Riyadh" | "Rome" | "Samara" | "Samoa" | "Santiago" | "Sapporo" | "Sarajevo" | "Saskatchewan" | "Seoul" | "Singapore" | "Skopje" | "Sofia" | "Solomon Is." | "Srednekolymsk" | "Sri Jayawardenepura" | "St. Petersburg" | "Stockholm" | "Sydney" | "Taipei" | "Tallinn" | "Tashkent" | "Tbilisi" | "Tehran" | "Tijuana" | "Tokelau Is." | "Tokyo" | "Turkey" | "UCT" | "US/Alaska" | "US/Aleutian" | "US/Arizona" | "US/Central" | "US/East-Indiana" | "US/Eastern" | "US/Hawaii" | "US/Indiana-Starke" | "US/Michigan" | "US/Mountain" | "US/Pacific" | "US/Samoa" | "UTC" | "Ulaanbaatar" | "Universal" | "Urumqi" | "Vienna" | "Vilnius" | "Vladivostok" | "Volgograd" | "W-SU" | "WET" | "Warsaw" | "Wellington" | "West Central Africa" | "Yakutsk" | "Yerevan" | "Zagreb" | "Zulu" | "Zurich";
                /** @enum {string} */
                type?: "hidden_event" | "private_event" | "public_event";
              };
            };
          };
        };
      };
      responses: {
        /** @description Creates an event, starts a templating job and returns event details */
        201: {
          content: {
            "application/json": {
              data: components["schemas"]["event"];
            };
          };
        };
        /** @description authentication failed */
        401: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description not found */
        404: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
        /** @description unprocessable_entity */
        422: {
          content: {
            "application/json": components["schemas"]["errors"];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    booleanFilter: {
      /** @description The attribute value must be equal to the given boolean */
      eq?: boolean;
    };
    bankQuestions: {
      id: string;
      /** @enum {string} */
      type: "bank_question";
      attributes: {
        /** @description List of child questions, this is not recursive structure */
        childQuestions: (({
            /** @description Bank Question external ID */
            id: number;
            /** @description Bank Question name */
            name: string;
            /** @description Field type of Bank Question */
            field_type: string;
            /** @description Default answer */
            defaultAnswer?: string | null;
            /** @description List of Options */
            options?: (components["schemas"]["option"])[] | null;
          })[]) | null;
        defaultAnswer: string | null;
        fieldType: string;
        id: string;
        name: string;
        /** @description List of Options */
        options: (components["schemas"]["option"])[] | null;
      };
    };
    dateTimeFilter: {
      /**
       * Format: date-time 
       * @description The attribute value must be equal to given date-time
       */
      eq?: string;
      /** @description List of date-time strings separated by comma (,). Attribute value must be equal to at least one of given string */
      in?: (string)[];
      /**
       * Format: date-time 
       * @description The attribute value must be greater than given date-time
       */
      gt?: string;
      /**
       * Format: date-time 
       * @description The attribute value must be less than given date-time
       */
      lt?: string;
      /**
       * Format: date-time 
       * @description The attribute value must be greater than or equal to given date-time
       */
      gte?: string;
      /**
       * Format: date-time 
       * @description The attribute value must be less than or equal to given date-time
       */
      lte?: string;
    };
    event: {
      id: string;
      /** @enum {string} */
      type: "event";
      attributes: {
        createdAt: string;
        description: string;
        id: string;
        metadata: Record<string, never>;
        name: string;
        published: boolean;
        slug: string;
        status: string;
        timeEnd: string | null;
        timeStart: string | null;
        timezone: string;
        type: string;
      };
    };
    magicLink: {
      id: string;
      /** @enum {string} */
      type: "magicLink";
      attributes: {
        /** Format: date-time */
        createdAt: string;
        email: string;
        extraFields: {
          [key: string]: string | undefined;
        };
        firstName: string;
        headline: string | null;
        id: string;
        lastName: string;
        magicLink: string;
        metadata: {
          [key: string]: string | undefined;
        };
        registrationId?: string | null;
        status: string | null;
        /** Format: date-time */
        updatedAt: string;
      };
    };
    magicLinksFilter: {
      email?: components["schemas"]["stringFilter"];
      updatedAt?: components["schemas"]["dateTimeFilter"];
      includeConfirmAndJoin?: components["schemas"]["booleanFilter"];
    };
    stringFilter: {
      /** @description The attribute value must be equal to the given string */
      eq?: string;
      /** @description List of strings separated by comma (,). Attribute value must be equal to at least one of given string */
      in?: (string)[];
    };
    tag: {
      id: string;
      /** @enum {string} */
      type: "tag";
      attributes: {
        id: string;
        name: string;
      };
    };
    template: {
      id: string;
      /** @enum {string} */
      type: "template";
      attributes: {
        id: string;
        name: string;
      };
    };
    ticket: {
      id: string;
      /** @enum {string} */
      type: "ticket";
      attributes: {
        claimed: number;
        count: number;
        /** Format: date-time */
        createdAt: string;
        description: string | null;
        /** Format: double */
        discount: number | null;
        eventId: string;
        id: string;
        name: string;
        /** Format: double */
        price: number;
        private: boolean;
        remaining: number;
        slug: string;
      };
    };
    dataSubscription: {
      id: string;
      /** @enum {string} */
      type: "dataSubscription";
      attributes: {
        configuration: {
          type?: string;
          url?: string | null;
        };
        eventId: string;
        /** Format: date-time */
        expiresAt: string;
        id: string;
        /** @description list of signals */
        signals: (string)[];
      };
    };
    report: {
      id: string;
      type: string;
      attributes: {
        id: string;
        /** @description URL for the generated report. Expires after 1 minute. */
        url?: string;
        title?: string;
        status?: string;
      };
    };
    in_progress_report: {
      id?: string;
      type?: string;
      attributes?: {
        id?: string;
        status?: string;
      };
    };
    registration: {
      id: string;
      /** @enum {string} */
      type: "registration";
      attributes: {
        attended: boolean;
        bio: string | null;
        /** Format: date-time */
        createdAt: string;
        /** @description List of Questions and answers */
        customRegistrationFields: (components["schemas"]["customRegistrationField"])[] | null;
        email: string;
        firstCheckIn: string | null;
        firstName: string;
        headline: string | null;
        id: string;
        lastName: string;
        linkedin: string | null;
        magicLinkId: string | null;
        metadata: Record<string, never>;
        phoneNumber: string | null;
        qrCodeData: string | null;
        qrCodeImageUrl: string | null;
        questionBankEnabled: boolean;
        refunded: boolean;
        registeredThrough: string;
        ticketId: string;
        timezone: string;
        twitter: string | null;
        /** Format: date-time */
        updatedAt: string;
        userId: string;
        utm: {
          utmSource?: string;
          utmCampaign?: string;
          utmMedium?: string;
          utmContent?: string;
          utmTerm?: string;
        };
        website: string | null;
      };
    };
    registrationsFilter: {
      email?: components["schemas"]["stringFilter"];
      createdAt?: components["schemas"]["dateTimeFilter"];
      refunded?: components["schemas"]["booleanFilter"];
      updatedAt?: components["schemas"]["dateTimeFilter"];
      userUpdatedAt?: components["schemas"]["dateTimeFilter"];
    };
    organization: {
      id: string;
      /** @enum {string} */
      type: "organization";
      attributes: {
        /** Format: date-time */
        createdAt: string;
        email: string;
        facebook: string | null;
        id: string;
        name: string;
        twitter: string | null;
        website: string | null;
      };
    };
    option: {
      /** @description Option Id */
      id: number;
      /** @description Option name */
      name: string;
      /** @description Sequence of the option */
      seq: string;
      /** @description Default answer */
      defaultAnswer?: boolean | null;
    };
    booth: {
      id: string;
      /** @enum {string} */
      type: "booth";
      attributes: {
        about: string | null;
        boothSize: string;
        /** Format: date-time */
        createdAt: string;
        email: string | null;
        facebook: string | null;
        headline: string | null;
        id: string;
        instagram: string | null;
        linkedin: string | null;
        name: string;
        priority: number;
        twitter: string | null;
        /** Format: date-time */
        updatedAt: string;
        website: string | null;
      };
    };
    scheduleItem: {
      id: string;
      /** @enum {string} */
      type: "scheduleItem";
      attributes: {
        area: string;
        areaId: string | null;
        areaName: string | null;
        /** Format: date-time */
        createdAt: string;
        description: string | null;
        id: string;
        name: string;
        speakers: (unknown)[];
        /** Format: date-time */
        timeEnd: string;
        /** Format: date-time */
        timeStart: string;
        /** Format: date-time */
        updatedAt: string;
      };
    };
    session: {
      id: string;
      /** @enum {string} */
      type: "session";
      attributes: {
        /** Format: date-time */
        createdAt: string;
        id: string;
        name: string;
        /** Format: date-time */
        updatedAt: string;
      };
    };
    stage: {
      id: string;
      /** @enum {string} */
      type: "stage";
      attributes: {
        /** Format: date-time */
        createdAt: string;
        id: string;
        name: string;
        /** Format: date-time */
        updatedAt: string;
      };
    };
    errors: {
      /** @description List of errors */
      errors: (components["schemas"]["error"])[];
    };
    customRegistrationField: {
      /** @description Question Id */
      id: string;
      /** @description Question */
      name: string;
      /** @description Answer of the question */
      value: OneOf<[string, (unknown)[]]>;
      /**
       * @description Question type will be any type of singleLineText, paragraphText, date,
       *                       singleSelect, multiSelect or conditional
       */
      type: string;
      /** @description List of child questions */
      childQuestions?: ({
          /** @description Question Id */
          id: string;
          /** @description Question */
          name: string;
          /** @description Answer of the question */
          value: OneOf<[string, (unknown)[]]>;
          /**
           * @description Question type will be any type of singleLineText, paragraphText, date,
           *                       singleSelect or multiSelect
           */
          type: string;
        })[] | null;
    };
    error: {
      /** @description An application-specific error code */
      code: string;
      /** @description A human-readable explanation specific to this occurrence of the problem. */
      detail: string;
      /** @description The HTTP status code applicable to error. */
      status: string;
      /** @description A short, human-readable summary of the problem that does not change from occurrence to occurrence of the problem */
      title: string;
      /** @description An object containing references to the source of the error */
      source: {
        /** @description A JSON Pointer to the associated entity in the request document. */
        pointer?: string;
        /** @description A string indicating which URI query parameter caused the error. */
        parameter?: string;
      };
    };
    /** @description Additional details for a list */
    listMeta: {
      /** @description Total count of list items */
      count: number;
    };
    /** @description Pagination links */
    listLinks: {
      /** @description First page URL */
      first: string;
      /** @description Current page URL */
      self: string;
      /** @description Last page URL */
      last: string;
      /** @description Previous page URL */
      prev?: string | null;
      /** @description Next page URL */
      next?: string | null;
    };
  };
  responses: never;
  parameters: {
    /** @description Number of items per page */
    perPage: number;
    /** @description Page number of a list of resources */
    page: number;
    /** @description Registration filtering options */
    registrationsFilter: components["schemas"]["registrationsFilter"];
    /** @description Magic links filtering options */
    magicLinksFilter: components["schemas"]["magicLinksFilter"];
  };
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export type operations = Record<string, never>;
